<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>V2Say</title>
  <subtitle>U see U say</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://v2say.com/"/>
  <updated>2017-04-01T05:18:36.444Z</updated>
  <id>https://v2say.com/</id>
  
  <author>
    <name>Floor23</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown Tutorial Inline Syntax</title>
    <link href="https://v2say.com/2017/04/01/Markdown%20Tutorial%20Inline%20Syntax/"/>
    <id>https://v2say.com/2017/04/01/Markdown Tutorial Inline Syntax/</id>
    <published>2017-04-01T02:50:13.000Z</published>
    <updated>2017-04-01T05:18:36.444Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h2><p>内联元素指的是与行内元素，与块状元素相对应。主要包括链接，代码，强调，图片等元素。块状元素的 Markdown 语法可以参考<a href="https://v2say.com/2017/03/30/Markdown%20Tutorial%20Block%20Syntax/">上一篇</a><br><!-- Read more --></p>
<hr>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种风格的链接: <strong>行内链接</strong> 和 <strong>引用链接</strong>。</p>
<p>两种风格的链接均用中括号扩起来 [ ]。</p>
<p>行内链接由两部分组成，方括号<code>[ ]</code>括起来的链接描述，以及紧跟方括号的链接地址，地址由括弧<code>( )</code>包围。括弧内可以选择为该链接添加标题。例如：</p>
<pre><code>   This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre><p>如果想要链接到当前服务器的页面，链接地址可以是相对地址：</p>
<pre><code>See my [About](/about/) page for details.   
</code></pre><p>引用类型的链接采用两对方括号进行表示，其中第一个方括号内容为链接的描述信息，第二个内容为链接的ID：</p>
<pre><code>This is [an example][id] reference-style link.
</code></pre><p>然后，你需要做的是在文档的任何位置，定义 ID 所对应的链接：</p>
<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre><p>规则说明：</p>
<ul>
<li>ID 由方括号包围 ，距离左边距不超过 3 个空格</li>
<li>一个冒号</li>
<li>一个或多个空格</li>
<li>链接地址</li>
<li>链接标题—可以由单引号，双引号或者括号包围起来</li>
</ul>
<p>以下三种表达方式是等价的：</p>
<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &apos;Optional Title Here&apos;
[foo]: http://example.com/  (Optional Title Here)
</code></pre><p><strong>注意：</strong> 链接名称可以由字母，数字，空格等组成，但是链接是大小写不敏感的，即链接大小写是一样的：</p>
<pre><code>[link text][a]
[link text][A]
</code></pre><p>是一样的。</p>
<p>关于链接也可以简写如下：</p>
<pre><code>[Google][]
</code></pre><p>然后链接的定义如下：</p>
<pre><code>[Google]: http://google.com/
</code></pre><p>下面是一个使用的示范：</p>
<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

[1]: http://google.com/        &quot;Google&quot;
[2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
[3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre><p>简写的方式如下：</p>
<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre><p>为了对比写法上的区别，将行内链接的写法也贴出来：</p>
<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre><p>由此可以看出来，引用链接的方式看起来更加利于编写和阅读。</p>
<hr>
<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用 (<code>*</code>) 和 (<code>_</code>) 来标记强调的字符。单个 <code>*</code> 或 <code>_</code> 最终被转化为<br>HTML <code>&lt;em&gt;</code> 标签；两个 <code>*</code> 或 <code>_</code>最终被转化为 HTML<br><code>&lt;strong&gt;</code> 标签：</p>
<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre><p>将会转化为：</p>
<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;
</code></pre><p><strong>注意：</strong> <code>*</code> 和 <code>_</code> 两侧不能有空格，否则会被当作单独字符处理。如果想要单独输出以上两个字符，则需要在字符前加 <code>\</code> 做转义。</p>
<hr>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>我们可以使用两个 (<code>` </code>) 来包围表示一段代码：</p>
<pre><code>Use the `printf()` function.
</code></pre><p>将会转化为：</p>
<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
</code></pre><p>在代码块中使用 `，必需在代码块起始和末尾加入多个`：</p>
<pre><code>``There is a literal backtick (`) here.``
</code></pre><p>在代码块内部，符合和尖括号会被自动转义为 HTML 实体：</p>
<pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.
</code></pre><p>会被转化为：</p>
<pre><code>&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre><hr>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>Markdown 中的图片语法与链接类似，也分为行内图片和引用两种。</p>
<p>行内图片语法如下：</p>
<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre><p>规则如下：</p>
<ul>
<li>语法说明字符<code>!</code>开头</li>
<li>一对方括号，包含图片的 <code>alt</code> 属性</li>
<li>一对括弧包含图片的地址，还可选择性的加上图片的标题 <code>title</code> </li>
</ul>
<p>引用型的图片语法如下：</p>
<pre><code>![Alt text][id]
</code></pre><p><code>id</code> 是图片的引用地址，其定义的语法与链接完全一致：</p>
<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre><p>该表示方法没有设置图片大小的语法，如果想要设置，则可以直接食用 HTML <code>&lt;img&gt;</code> 标签。</p>
<hr>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><hr>
<h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持为 URL 和 email 自动生成链接。你需要做的就是用尖括号把地址括起来：</p>
<pre><code>&lt;http://example.com/&gt;
</code></pre><p>Markdown 会将上面的句子转化为：</p>
<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
</code></pre><p>email的自动链接与 URL 基本一致，不同的地方在于为了防止 email 地址被 spambots 处理，故进行了转义：</p>
<pre><code>&lt;address@example.com&gt;
</code></pre><p>会被 Markdown 解析为：</p>
<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre><p>在浏览器中可以被转化为可以点击的 email 地址 “address@example.com”</p>
<hr>
<h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 语法可以使用反斜线 <code>\</code> 来表示字符本身。如果想要在文字中展示 <code>*</code> ，则需要在 <code>*</code> 前加上反斜线：</p>
<pre><code>\*literal asterisks\*
</code></pre><p>Markdown 支持用反斜线的字符：</p>
<pre><code>\   反斜线
`   点号
*   星号
_   下划线
{}  大括号
[]  方括号
()  小括弧
#   井号
+    加号
-    减号
.   英文句号
!   感叹号
</code></pre><p><a href="https://v2say.com/2017/03/30/Markdown%20Tutorial%20Block%20Syntax/">上一篇Markdown语法介绍</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;内联元素&quot;&gt;&lt;a href=&quot;#内联元素&quot; class=&quot;headerlink&quot; title=&quot;内联元素&quot;&gt;&lt;/a&gt;内联元素&lt;/h2&gt;&lt;p&gt;内联元素指的是与行内元素，与块状元素相对应。主要包括链接，代码，强调，图片等元素。块状元素的 Markdown 语
    
    </summary>
    
      <category term="100000" scheme="https://v2say.com/categories/100000/"/>
    
    
      <category term="Markdown Grammar JOHN GRUBER Markdown语法 10分钟学会Markdown" scheme="https://v2say.com/tags/Markdown-Grammar-JOHN-GRUBER-Markdown%E8%AF%AD%E6%B3%95-10%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9AMarkdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Tutorial Inline Syntax</title>
    <link href="https://v2say.com/2017/04/01/Markdown-Tutorial-Inline-Syntax/"/>
    <id>https://v2say.com/2017/04/01/Markdown-Tutorial-Inline-Syntax/</id>
    <published>2017-04-01T02:50:13.000Z</published>
    <updated>2017-04-01T04:24:22.720Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h2><p>内联元素指的是与行内元素，与块状元素相对应。主要包括链接，代码，强调，图片等元素。块状元素的 Markdown 语法可以参考<a href="https://v2say.com/2017/03/30/Markdown%20Tutorial%20Block%20Syntax/">上一篇</a><br><!-- 阅读更多 --></p>
<hr>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种风格的链接: <strong>行内链接</strong> 和 <strong>引用链接</strong>。</p>
<p>两种风格的链接均用中括号扩起来 [ ]。</p>
<p>行内链接由两部分组成，方括号<code>[ ]</code>括起来的链接描述，以及紧跟方括号的链接地址，地址由括弧<code>( )</code>包围。括弧内可以选择为该链接添加标题。例如：</p>
<pre><code>   This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre><p>如果想要链接到当前服务器的页面，链接地址可以是相对地址：</p>
<pre><code>See my [About](/about/) page for details.   
</code></pre><p>引用类型的链接采用两对方括号进行表示，其中第一个方括号内容为链接的描述信息，第二个内容为链接的ID：</p>
<pre><code>This is [an example][id] reference-style link.
</code></pre><p>然后，你需要做的是在文档的任何位置，定义 ID 所对应的链接：</p>
<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre><p>规则说明：</p>
<ul>
<li>ID 由方括号包围 ，距离左边距不超过 3 个空格</li>
<li>一个冒号</li>
<li>一个或多个空格</li>
<li>链接地址</li>
<li>链接标题—可以由单引号，双引号或者括号包围起来</li>
</ul>
<p>以下三种表达方式是等价的：</p>
<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &apos;Optional Title Here&apos;
[foo]: http://example.com/  (Optional Title Here)
</code></pre><p><strong>注意：</strong> 链接名称可以由字母，数字，空格等组成，但是链接是大小写不敏感的，即链接大小写是一样的：</p>
<pre><code>[link text][a]
[link text][A]
</code></pre><p>是一样的。</p>
<p>关于链接也可以简写如下：</p>
<pre><code>[Google][]
</code></pre><p>然后链接的定义如下：</p>
<pre><code>[Google]: http://google.com/
</code></pre><p>下面是一个使用的示范：</p>
<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

[1]: http://google.com/        &quot;Google&quot;
[2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
[3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre><p>简写的方式如下：</p>
<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre><p>为了对比写法上的区别，将行内链接的写法也贴出来：</p>
<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre><p>由此可以看出来，引用链接的方式看起来更加利于编写和阅读。</p>
<hr>
<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用 (<code>*</code>) 和 (<code>_</code>) 来标记强调的字符。单个 <code>*</code> 或 <code>_</code> 最终被转化为<br>HTML <code>&lt;em&gt;</code> 标签；两个 <code>*</code> 或 <code>_</code>最终被转化为 HTML<br><code>&lt;strong&gt;</code> 标签：</p>
<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre><p>将会转化为：</p>
<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;
</code></pre><p><strong>注意：</strong> <code>*</code> 和 <code>_</code> 两侧不能有空格，否则会被当作单独字符处理。如果想要单独输出以上两个字符，则需要在字符前加 <code>\</code> 做转义。</p>
<hr>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>我们可以使用两个 (<code>` </code>) 来包围表示一段代码：</p>
<pre><code>Use the `printf()` function.
</code></pre><p>将会转化为：</p>
<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
</code></pre><p>在代码块中使用 `，必需在代码块起始和末尾加入多个`：</p>
<pre><code>``There is a literal backtick (`) here.``
</code></pre><p>在代码块内部，符合和尖括号会被自动转义为 HTML 实体：</p>
<pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.
</code></pre><p>会被转化为：</p>
<pre><code>&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre><hr>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>Markdown 中的图片语法与链接类似，也分为行内图片和引用两种。</p>
<p>行内图片语法如下：</p>
<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre><p>规则如下：</p>
<ul>
<li>语法说明字符<code>!</code>开头</li>
<li>一对方括号，包含图片的 <code>alt</code> 属性</li>
<li>一对括弧包含图片的地址，还可选择性的加上图片的标题 <code>title</code> </li>
</ul>
<p>引用型的图片语法如下：</p>
<pre><code>![Alt text][id]
</code></pre><p><code>id</code> 是图片的引用地址，其定义的语法与链接完全一致：</p>
<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre><p>该表示方法没有设置图片大小的语法，如果想要设置，则可以直接食用 HTML <code>&lt;img&gt;</code> 标签。</p>
<hr>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><hr>
<h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持为 URL 和 email 自动生成链接。你需要做的就是用尖括号把地址括起来：</p>
<pre><code>&lt;http://example.com/&gt;
</code></pre><p>Markdown 会将上面的句子转化为：</p>
<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
</code></pre><p>email的自动链接与 URL 基本一致，不同的地方在于为了防止 email 地址被 spambots 处理，故进行了转义：</p>
<pre><code>&lt;address@example.com&gt;
</code></pre><p>会被 Markdown 解析为：</p>
<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre><p>在浏览器中可以被转化为可以点击的 email 地址 “address@example.com”</p>
<hr>
<h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 语法可以使用反斜线 <code>\</code> 来表示字符本身。如果想要在文字中展示 <code>*</code> ，则需要在 <code>*</code> 前加上反斜线：</p>
<pre><code>\*literal asterisks\*
</code></pre><p>Markdown 支持用反斜线的字符：</p>
<p>   \   反斜线<br>   `   点号</p>
<pre><code>*   星号
_   下划线
{}  大括号
[]  方括号
()  小括弧
#   井号
+    加号
-    减号
.   英文句号
</code></pre><p>   !   感叹号</p>
<p><a href="https://v2say.com/2017/03/30/Markdown%20Tutorial%20Block%20Syntax/">上一篇Markdown语法介绍</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;内联元素&quot;&gt;&lt;a href=&quot;#内联元素&quot; class=&quot;headerlink&quot; title=&quot;内联元素&quot;&gt;&lt;/a&gt;内联元素&lt;/h2&gt;&lt;p&gt;内联元素指的是与行内元素，与块状元素相对应。主要包括链接，代码，强调，图片等元素。块状元素的 Markdown 语
    
    </summary>
    
      <category term="100000" scheme="https://v2say.com/categories/100000/"/>
    
    
      <category term="Markdown Grammar JOHN GRUBER Markdown语法 10分钟学会Markdown" scheme="https://v2say.com/tags/Markdown-Grammar-JOHN-GRUBER-Markdown%E8%AF%AD%E6%B3%95-10%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9AMarkdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Tutorial Block Syntax</title>
    <link href="https://v2say.com/2017/03/30/Markdown%20Tutorial%20Block%20Syntax/"/>
    <id>https://v2say.com/2017/03/30/Markdown Tutorial Block Syntax/</id>
    <published>2017-03-30T05:12:30.000Z</published>
    <updated>2017-04-01T02:55:27.270Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown 语法<br>参考：JOHN GRUBER「Markdown 语法作者」<a href="https://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">个人网站</a></p>
<p><strong>注:</strong> 该文档就是采用 Markdown 语法进行编辑的。</p>
<hr>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Markdown 标记语言产生的意义就是让文本编辑能够更容易的读和写。</p>
<p>Markdown 注重可读性。可发布的 Markdown 标记的文档应该是纯文本，不应该包含用来格式化的标记。Markdown 语法由标点符号标记，标点符号的选择尽量展示其最原始的含义。例如用<code>*</code>强调，<code>&gt;</code>表示引用等等。</p>
<p>Markdown 并不是 HTML 的替代品，它仅仅支持 HTML 的部分标签。HTML 是<strong>发布</strong>格式，Markdown 是<strong>书写</strong>格式。如果想要使用HTML中的其他标签，可以直接在Markdown文档中使用。<br><a id="more"></a><br>Markdown语法对块级别的HTML元素有使用限制，例如 <code>&lt;div&gt;</code>，<code>&lt;table&gt;</code>，<code>&lt;pre&gt;</code>，<code>&lt;p&gt;</code>等等。在使用的时候必须在块的头和尾加入空行，并且头和尾标记不能有缩进。</p>
<p>例如在Markdown文档中添加HTML表格语法如下:</p>
<pre><code>上一段落

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;table content&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

下一段落
</code></pre><p><strong>注意:</strong> Markdown语法在上述块内不起作用，例如在HTML块中使用<strong>强调</strong>不起作用。</p>
<p>内联级别的 HTML 标签，例如 <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code> 或者 <code>&lt;del&gt;</code> 可以在任何地方使用。和块级 HTML 标签不一样的地方就是，Markdown 语法<strong>会解析</strong>内联级别内的内容。</p>
<hr>
<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>在 HTML 中，<code>&lt;</code> 和 <code>&amp;</code> 需要特殊处理。<code>&lt;</code> 标示标签的开始，<code>&amp;</code> 标示HTML实体。如果要使用，必须采用 <code>&amp;lt;</code>和<code>&amp;amp;</code>来标示&lt;和&amp;。这个是比较麻烦的一点，例如要写“AT&amp;T”，在 Markdown 文档中必须写作 <code>AT&amp;amp;T</code>。甚至在文档中插入 URL，也需要转义，例如：</p>
<pre><code>https://v2say.com/100000?page=1&amp;num=10
</code></pre><p>必须写作：</p>
<pre><code>https://v2say.com/100000?page=1&amp;amp;num=10
</code></pre><p>需要记住以上必须转义的地方，例如 <code>&amp;copy</code> 即 &copy; 标示版权的标记就不需要转义。</p>
<hr>
<h2 id="区块标记"><a href="#区块标记" class="headerlink" title="区块标记"></a>区块标记</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>一段话由一行或多行文本组成，并由一个或多个空行「仅包含tab 或 空格」隔开。如果想要另起一段，则在句末添加两个或多个空格，然后再回车。</p>
<hr>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题标示法：</p>
<p>标题下方用等号或者短横标示，例如：<br>    大标题<br>   =<br>    小标题<br>    -</p>
<p><code>=</code> 和 <code>-</code> 的数量不限</p>
<p>用 <code>#</code> 在标题头部标示， <code>#</code> 后保留一个空格:</p>
<pre><code># 一号标题
## 二号标题
###### 六号标题
</code></pre><hr>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>Markdown 使用 <code>&gt;</code> 标示引用段落。最好在每行之前添加 <code>&gt;</code> :</p>
<pre><code>&gt; 这
&gt; 是
&gt; 引
&gt; 
&gt; 用
</code></pre><p>效果如下：</p>
<blockquote>
<p>这<br>是<br>引</p>
<p>用</p>
</blockquote>
<p>引用可以嵌套，需要在引用内部再添加一层 <code>&gt;</code>:</p>
<pre><code>&gt; 引用一
&gt;
&gt; &gt; 引用二
&gt;
&gt; 引用一
</code></pre><p>效果如下：</p>
<blockquote>
<p>引用一</p>
<blockquote>
<p>引用二</p>
</blockquote>
<p>引用一</p>
</blockquote>
<p>引用块可以包含其他 Markdown 元素, 包括 headers, lists, code:</p>
<pre><code>&gt; 1.   This is the first list item.
&gt; 2.   This is the second list item.
&gt; 
&gt; Here&apos;s some example code:
&gt; 
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre><p>效果如下：</p>
<blockquote>
<ol>
<li>第一条</li>
<li>第二条</li>
</ol>
<p>代码段:</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre></blockquote>
<hr>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序和无序列表</p>
<p>无序列表以 <code>*</code>，<code>+</code>，<code>-</code> 在行首标示– 以下3种表示是等价的：</p>
<pre><code>*   Red
*   Green
*   Blue

+   Red
+   Green
+   Blue

-   Red
-   Green
-   Blue
</code></pre><p>有序列表由英文句号标示:</p>
<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre><p>如果某个列表中包含多个段落，保证每行起始距页边4个空格或一个tab。</p>
<pre><code>1.  第一段

    第二段

2.  第二条
</code></pre><p>在列表中添加引用， <code>&gt;</code> 符号需要缩进：</p>
<pre><code>*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.
</code></pre><p>效果如下：</p>
<ul>
<li><p>A list item with a blockquote:</p>
<blockquote>
<p>This is a blockquote<br>inside a list item.</p>
</blockquote>
</li>
</ul>
<hr>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>引用代码块需要在行首添加4个空格或1个tab：</p>
<pre><code>代码块标示如下:

    public static void main(){
        return;
    }
</code></pre><p>效果如下：</p>
<pre><code>public static void main(){
    return;
}
</code></pre><p>代码块会持续到下一个无缩进的行或文章末尾。</p>
<p>在代码块中，<code>&amp;</code>，<code>&lt;</code> 和 <code>&gt;</code> 会自动转换为 HTML 实体，其他普通的 Markdown 语法不会被 Markdown 语法解析。例如：</p>
<pre><code>&lt;div class=&quot;footer&quot;&gt;
    &amp;copy; 2004 Foo Corporation
&lt;/div&gt;

**strong**
</code></pre><p>转化后如下：</p>
<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre><hr>
<h3 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h3><p>由三个或以上的<code>*</code>，<code>-</code>标示水平分割线:</p>
<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre><hr>
<p>关于Markdown语法内联元素相关内容，请<a href="https://v2say.com/2017/04/01/Markdown%20Tutorial%20Inline%20Syntax/">点击</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown 语法&lt;br&gt;参考：JOHN GRUBER「Markdown 语法作者」&lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;个人网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; 该文档就是采用 Markdown 语法进行编辑的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;Markdown 标记语言产生的意义就是让文本编辑能够更容易的读和写。&lt;/p&gt;
&lt;p&gt;Markdown 注重可读性。可发布的 Markdown 标记的文档应该是纯文本，不应该包含用来格式化的标记。Markdown 语法由标点符号标记，标点符号的选择尽量展示其最原始的含义。例如用&lt;code&gt;*&lt;/code&gt;强调，&lt;code&gt;&amp;gt;&lt;/code&gt;表示引用等等。&lt;/p&gt;
&lt;p&gt;Markdown 并不是 HTML 的替代品，它仅仅支持 HTML 的部分标签。HTML 是&lt;strong&gt;发布&lt;/strong&gt;格式，Markdown 是&lt;strong&gt;书写&lt;/strong&gt;格式。如果想要使用HTML中的其他标签，可以直接在Markdown文档中使用。&lt;br&gt;
    
    </summary>
    
      <category term="100000" scheme="https://v2say.com/categories/100000/"/>
    
    
      <category term="Markdown GitHub GFM Grammar JOHN GRUBER" scheme="https://v2say.com/tags/Markdown-GitHub-GFM-Grammar-JOHN-GRUBER/"/>
    
  </entry>
  
</feed>
